// flow-typed signature: 35828ed82d5b55ba888c8c5f2298897e
// flow-typed version: <<STUB>>/graphql-tools_v^3.0.5/flow_v0.76.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'graphql-tools'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'graphql-tools' {
  declare module.exports: any
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'graphql-tools/dist/generate/addResolveFunctionsToSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/addSchemaLevelResolveFunction' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/assertResolveFunctionsPresent' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/attachConnectorsToContext' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/attachDirectiveResolvers' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/buildSchemaFromTypeDefinitions' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/chainResolvers' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/checkForResolveTypeResolver' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/concatenateTypeDefs' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/decorateWithLogger' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/extendResolversFromInterfaces' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/extractExtensionDefinitions' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/forEachField' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/index' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/generate/SchemaError' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/implementsAbstractType' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/index' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/Interfaces' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/isEmptyObject' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/isSpecifiedScalarType' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/Logger' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/makeExecutableSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/mergeDeep' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/mock' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/schemaVisitor' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/defaultMergedResolver' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/delegateToSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/errors' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/index' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/introspectSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/linkToFetcher' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/makeRemoteExecutableSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/mergeSchemas' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/observableToAsyncIterable' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/resolveFromParentTypename' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/resolvers' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/schemaRecreation' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/stitching/typeFromAST' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/AddArgumentsAsVariables' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/AddTypenameToAbstract' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/CheckResultAndHandleErrors' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/ExpandAbstractTypes' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/ExtractField' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/FilterRootFields' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/FilterToSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/FilterTypes' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/index' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/RenameRootFields' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/RenameTypes' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/ReplaceFieldWithFragment' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/TransformRootFields' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/transforms' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/transformSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/visitSchema' {
  declare module.exports: any
}

declare module 'graphql-tools/dist/transforms/WrapQuery' {
  declare module.exports: any
}

// Filename aliases
declare module 'graphql-tools/dist/generate/addResolveFunctionsToSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/addResolveFunctionsToSchema'>
}
declare module 'graphql-tools/dist/generate/addSchemaLevelResolveFunction.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/addSchemaLevelResolveFunction'>
}
declare module 'graphql-tools/dist/generate/assertResolveFunctionsPresent.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/assertResolveFunctionsPresent'>
}
declare module 'graphql-tools/dist/generate/attachConnectorsToContext.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/attachConnectorsToContext'>
}
declare module 'graphql-tools/dist/generate/attachDirectiveResolvers.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/attachDirectiveResolvers'>
}
declare module 'graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/buildSchemaFromTypeDefinitions'>
}
declare module 'graphql-tools/dist/generate/chainResolvers.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/chainResolvers'>
}
declare module 'graphql-tools/dist/generate/checkForResolveTypeResolver.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/checkForResolveTypeResolver'>
}
declare module 'graphql-tools/dist/generate/concatenateTypeDefs.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/concatenateTypeDefs'>
}
declare module 'graphql-tools/dist/generate/decorateWithLogger.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/decorateWithLogger'>
}
declare module 'graphql-tools/dist/generate/extendResolversFromInterfaces.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/extendResolversFromInterfaces'>
}
declare module 'graphql-tools/dist/generate/extractExtensionDefinitions.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/extractExtensionDefinitions'>
}
declare module 'graphql-tools/dist/generate/forEachField.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/forEachField'>
}
declare module 'graphql-tools/dist/generate/index.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/index'>
}
declare module 'graphql-tools/dist/generate/SchemaError.js' {
  declare module.exports: $Exports<'graphql-tools/dist/generate/SchemaError'>
}
declare module 'graphql-tools/dist/implementsAbstractType.js' {
  declare module.exports: $Exports<'graphql-tools/dist/implementsAbstractType'>
}
declare module 'graphql-tools/dist/index.js' {
  declare module.exports: $Exports<'graphql-tools/dist/index'>
}
declare module 'graphql-tools/dist/Interfaces.js' {
  declare module.exports: $Exports<'graphql-tools/dist/Interfaces'>
}
declare module 'graphql-tools/dist/isEmptyObject.js' {
  declare module.exports: $Exports<'graphql-tools/dist/isEmptyObject'>
}
declare module 'graphql-tools/dist/isSpecifiedScalarType.js' {
  declare module.exports: $Exports<'graphql-tools/dist/isSpecifiedScalarType'>
}
declare module 'graphql-tools/dist/Logger.js' {
  declare module.exports: $Exports<'graphql-tools/dist/Logger'>
}
declare module 'graphql-tools/dist/makeExecutableSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/makeExecutableSchema'>
}
declare module 'graphql-tools/dist/mergeDeep.js' {
  declare module.exports: $Exports<'graphql-tools/dist/mergeDeep'>
}
declare module 'graphql-tools/dist/mock.js' {
  declare module.exports: $Exports<'graphql-tools/dist/mock'>
}
declare module 'graphql-tools/dist/schemaVisitor.js' {
  declare module.exports: $Exports<'graphql-tools/dist/schemaVisitor'>
}
declare module 'graphql-tools/dist/stitching/defaultMergedResolver.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/defaultMergedResolver'>
}
declare module 'graphql-tools/dist/stitching/delegateToSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/delegateToSchema'>
}
declare module 'graphql-tools/dist/stitching/errors.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/errors'>
}
declare module 'graphql-tools/dist/stitching/index.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/index'>
}
declare module 'graphql-tools/dist/stitching/introspectSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/introspectSchema'>
}
declare module 'graphql-tools/dist/stitching/linkToFetcher.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/linkToFetcher'>
}
declare module 'graphql-tools/dist/stitching/makeRemoteExecutableSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/makeRemoteExecutableSchema'>
}
declare module 'graphql-tools/dist/stitching/mergeSchemas.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/mergeSchemas'>
}
declare module 'graphql-tools/dist/stitching/observableToAsyncIterable.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/observableToAsyncIterable'>
}
declare module 'graphql-tools/dist/stitching/resolveFromParentTypename.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/resolveFromParentTypename'>
}
declare module 'graphql-tools/dist/stitching/resolvers.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/resolvers'>
}
declare module 'graphql-tools/dist/stitching/schemaRecreation.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/schemaRecreation'>
}
declare module 'graphql-tools/dist/stitching/typeFromAST.js' {
  declare module.exports: $Exports<'graphql-tools/dist/stitching/typeFromAST'>
}
declare module 'graphql-tools/dist/transforms/AddArgumentsAsVariables.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/AddArgumentsAsVariables'>
}
declare module 'graphql-tools/dist/transforms/AddTypenameToAbstract.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/AddTypenameToAbstract'>
}
declare module 'graphql-tools/dist/transforms/CheckResultAndHandleErrors.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/CheckResultAndHandleErrors'>
}
declare module 'graphql-tools/dist/transforms/ExpandAbstractTypes.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/ExpandAbstractTypes'>
}
declare module 'graphql-tools/dist/transforms/ExtractField.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/ExtractField'>
}
declare module 'graphql-tools/dist/transforms/FilterRootFields.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/FilterRootFields'>
}
declare module 'graphql-tools/dist/transforms/FilterToSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/FilterToSchema'>
}
declare module 'graphql-tools/dist/transforms/FilterTypes.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/FilterTypes'>
}
declare module 'graphql-tools/dist/transforms/index.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/index'>
}
declare module 'graphql-tools/dist/transforms/RenameRootFields.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/RenameRootFields'>
}
declare module 'graphql-tools/dist/transforms/RenameTypes.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/RenameTypes'>
}
declare module 'graphql-tools/dist/transforms/ReplaceFieldWithFragment.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/ReplaceFieldWithFragment'>
}
declare module 'graphql-tools/dist/transforms/TransformRootFields.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/TransformRootFields'>
}
declare module 'graphql-tools/dist/transforms/transforms.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/transforms'>
}
declare module 'graphql-tools/dist/transforms/transformSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/transformSchema'>
}
declare module 'graphql-tools/dist/transforms/visitSchema.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/visitSchema'>
}
declare module 'graphql-tools/dist/transforms/WrapQuery.js' {
  declare module.exports: $Exports<'graphql-tools/dist/transforms/WrapQuery'>
}
